{"version":3,"sources":["pages/ChatPage/index.js"],"names":["Chat","useState","wsChannel","setWsChannel","useEffect","createChannel","ws","WebSocket","addEventListener","event","console","log","setTimeout","Messages","AddMessageForm","messages","setMessages","newMessages","JSON","parse","data","style","height","overflowY","map","messageBlock","index","Message","message","photo","userName","userId","width","src","alt","setMessage","wsOpen","setWsOpen","onChange","e","currentTarget","value","disabled","onClick","send","ChatPage"],"mappings":"yKAUMA,EAAO,WACX,MAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,qBAAU,YACR,SAASC,IACP,IAAMC,EAAK,IAAIC,UACb,gEAEA,OAAFD,QAAE,IAAFA,KAAIE,iBAAiB,SAAS,SAACC,GAC7BC,QAAQC,IAAI,aACZC,WAAWP,EAAe,QAE5BF,EAAaG,GAEfD,KACC,IAEHD,qBAAU,cAAU,CAACF,IAGnB,gCACE,cAACW,EAAD,CAAUX,UAAWA,IACrB,cAACY,EAAD,CAAgBZ,UAAWA,QAK3BW,EAAW,SAAC,GAAmB,IAAjBX,EAAgB,EAAhBA,UAClB,EAAgCD,mBAAS,IAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KAQA,OANAZ,qBAAU,WACC,OAATF,QAAS,IAATA,KAAWM,iBAAiB,WAAW,SAACC,GACtC,IAAIQ,EAAcC,KAAKC,MAAMV,EAAMW,MACnCJ,GAAY,SAACD,GAAD,4BAAkBA,GAAlB,YAA+BE,YAE5C,CAACf,IAEF,sBAAKmB,MAAO,CAAEC,OAAQ,OAAQC,UAAW,QAAzC,qBAEGR,EAASS,KAAI,SAACC,EAAcC,GAAf,OACZ,cAACC,EAAD,CAEEC,QAASH,EAAaG,QACtBC,MAAOJ,EAAaI,MACpBC,SAAUL,EAAaK,SACvBC,OAAQN,EAAaM,QAJhBL,UAWTC,EAAU,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,gCACE,qBAAKE,MAAO,GAAIC,IAAKJ,EAAOK,IAAI,WAChC,+BACE,4BAAIJ,MAEN,8BAAMF,IACN,2BAKAd,EAAiB,SAAC,GAAmB,IAAjBZ,EAAgB,EAAhBA,UACxB,EAA8BD,mBAAS,IAAvC,mBAAO2B,EAAP,KAAgBO,EAAhB,KACA,EAA4BlC,oBAAS,GAArC,mBAAOmC,EAAP,KAAeC,EAAf,KAeA,OANAjC,qBAAU,WACC,OAATF,QAAS,IAATA,KAAWM,iBAAiB,QAAQ,WAClC6B,GAAU,QAEX,CAACnC,IAGF,gCACE,0BACEoC,SAAU,SAACC,GAAD,OAAOJ,EAAWI,EAAEC,cAAcC,QAC5CA,MAAOb,IAET,wBAAQc,SAAwB,OAAdxC,IAAuBkC,EAAQO,QApBjC,WACbf,IAGL1B,EAAU0C,KAAKhB,GACfO,EAAW,MAeT,sBAMSU,UAtGE,WACf,OACE,8BACE,cAAC7C,EAAD","file":"static/js/5.e9074b95.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst ChatPage = () => {\r\n  return (\r\n    <div>\r\n      <Chat />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Chat = () => {\r\n  const [wsChannel, setWsChannel] = useState(null);\r\n\r\n  useEffect(() => {\r\n    function createChannel() {\r\n      const ws = new WebSocket(\r\n        \"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\"\r\n      );\r\n      ws?.addEventListener(\"close\", (event) => {\r\n        console.log(\"WS CLOSED\");\r\n        setTimeout(createChannel, 5000);\r\n      });\r\n      setWsChannel(ws);\r\n    }\r\n    createChannel();\r\n  }, []);\r\n\r\n  useEffect(() => {}, [wsChannel]);\r\n\r\n  return (\r\n    <div>\r\n      <Messages wsChannel={wsChannel} />\r\n      <AddMessageForm wsChannel={wsChannel} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Messages = ({ wsChannel }) => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    wsChannel?.addEventListener(\"message\", (event) => {\r\n      let newMessages = JSON.parse(event.data);\r\n      setMessages((messages) => [...messages, ...newMessages]);\r\n    });\r\n  }, [wsChannel]);\r\n  return (\r\n    <div style={{ height: \"60vh\", overflowY: \"auto\" }}>\r\n      Messages\r\n      {messages.map((messageBlock, index) => (\r\n        <Message\r\n          key={index}\r\n          message={messageBlock.message}\r\n          photo={messageBlock.photo}\r\n          userName={messageBlock.userName}\r\n          userId={messageBlock.userId}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message = ({ message, photo, userName }) => {\r\n  return (\r\n    <div>\r\n      <img width={40} src={photo} alt=\"avatar\" />\r\n      <span>\r\n        <b>{userName}</b>\r\n      </span>\r\n      <div>{message}</div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = ({ wsChannel }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [wsOpen, setWsOpen] = useState(false);\r\n  const sendMessage = () => {\r\n    if (!message) {\r\n      return;\r\n    }\r\n    wsChannel.send(message);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    wsChannel?.addEventListener(\"open\", () => {\r\n      setWsOpen(true);\r\n    });\r\n  }, [wsChannel]);\r\n\r\n  return (\r\n    <div>\r\n      <textarea\r\n        onChange={(e) => setMessage(e.currentTarget.value)}\r\n        value={message}\r\n      ></textarea>\r\n      <button disabled={wsChannel === null || !wsOpen} onClick={sendMessage}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default ChatPage;\r\n"],"sourceRoot":""}