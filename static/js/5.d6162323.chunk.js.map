{"version":3,"sources":["components/Messages/DialogWindow/DialogWindow.module.css","components/Messages/DialogWindow/Messages/MessageItem.jsx","components/Messages/DialogWindow/Chats/ChatItem.jsx","components/Messages/DialogWindow/DialogWindow.jsx","components/HOC/withAuthRedirect.jsx","components/Messages/DialogWindow/DialogWindowContainer.jsx"],"names":["module","exports","MessageItem","props","className","s","message","ChatItem","path","id","chat","to","activeClassName","active","name","maxLength20","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","messageText","DialogWindow","d","dialogsPage","chatsItem","chatsData","map","c","messageItem","messagesData","m","messagesWindow","chats","dialogWindow","formData","addMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","Auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,QAAU,8BAA8B,aAAe,mCAAmC,OAAS,6BAA6B,eAAiB,uC,8FCKpMC,EAJK,SAAAC,GAChB,OAAO,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,EAAMG,W,QCW9BC,EAXE,SAAAJ,GACb,IAAIK,EAAO,aAAeL,EAAMM,GAChC,OACI,qBAAKL,UAAWC,IAAEK,KAAlB,SACI,cAAC,IAAD,CAASC,GAAIH,EAAMI,gBAAiBP,IAAEQ,OAAtC,SACKV,EAAMW,U,kCCyBnBC,EAAcC,YAAiB,IAW7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAVL,SAACf,GACpB,OACI,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUV,KAAK,iBAAiBW,SAAU,CAACC,IAAUX,GAChEY,YAAa,qBAAsBvB,UAAWC,IAAEuB,cACvD,yDAMGC,EArCM,SAAA1B,GACjB,IAAI2B,EAAI3B,EAAM4B,YACVC,EAAYF,EAAEG,UAAUC,KAAI,SAAAC,GAAC,OAAK,cAAC,EAAD,CAAqB1B,GAAI0B,EAAE1B,GAAIK,KAAMqB,EAAErB,MAAxBqB,EAAE1B,OACnD2B,EAAcN,EAAEO,aAAaH,KAAI,SAAAI,GAAC,OAAK,cAAC,EAAD,CAAwBlC,UAAWC,IAAEC,QAASA,QAASgC,EAAEhC,SAAvCgC,EAAE7B,OAK/D,OACI,sBAAKL,UAAWC,IAAEkC,eAAlB,UACI,8BACI,qBAAKnC,UAAWC,IAAEmC,MAAlB,SACKR,MAGT,8BACI,sBAAK5B,UAAWC,IAAEoC,aAAlB,UACKL,EACD,cAACnB,EAAD,CAAqBG,SAdd,SAACsB,GACpBvC,EAAMwC,WAAWD,EAASE,gBAC1BF,EAASE,eAAiB,e,8DCV9BC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SCgBRE,sBACXC,aAdkB,SAACJ,GACnB,MAAO,CACHf,YAAae,EAAMf,gBAGF,SAACoB,GACtB,MAAO,CACHR,WAAY,SAACC,GACTO,EAASC,YAAwBR,UDPb,SAACS,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKpD,MAAM4C,OACT,cAACM,EAAD,eAAeE,KAAKpD,QADI,cAAC,IAAD,CAAUQ,GAAG,eAHT,GACX6C,IAAMH,WAUtC,OAFqCH,YAAQL,EAARK,CAAoCI,KCG9DL,CAGbpB","file":"static/js/5.d6162323.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageText\":\"DialogWindow_messageText__aO5yo\",\"message\":\"DialogWindow_message__3yiqd\",\"dialogWindow\":\"DialogWindow_dialogWindow__v4Tav\",\"active\":\"DialogWindow_active__2AwZN\",\"messagesWindow\":\"DialogWindow_messagesWindow__j0Ix9\"};","import s from \"../DialogWindow.module.css\";\r\n\r\nconst MessageItem = props => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default MessageItem","import s from \"../DialogWindow.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst ChatItem = props => {\r\n    let path = '/messages/' + props.id\r\n    return (\r\n        <div className={s.chat}>\r\n            <NavLink to={path} activeClassName={s.active}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatItem","import s from './DialogWindow.module.css'\r\nimport React from \"react\";\r\nimport MessageItem from \"./Messages/MessageItem\";\r\nimport ChatItem from \"./Chats/ChatItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../Validators/validators\";\r\n\r\nconst DialogWindow = props => {\r\n    let d = props.dialogsPage\r\n    let chatsItem = d.chatsData.map(c => (<ChatItem key={c.id} id={c.id} name={c.name}/>))\r\n    let messageItem = d.messagesData.map(m => (<MessageItem key={m.id} className={s.message} message={m.message}/>))\r\n    let addMessageDialog = (formData) => {\r\n        props.addMessage(formData.newMessageBody)\r\n        formData.newMessageBody = ''\r\n    }\r\n    return (\r\n        <div className={s.messagesWindow}>\r\n            <div>\r\n                <div className={s.chats}>\r\n                    {chatsItem}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className={s.dialogWindow}>\r\n                    {messageItem}\r\n                    <AddMessageReduxForm onSubmit={addMessageDialog}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength20 = maxLengthCreator(20)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name='newMessageBody' validate={[required, maxLength20]}\r\n                   placeholder={'Write a message...'} className={s.messageText}/>\r\n            <button>Send message!</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\nexport default DialogWindow","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.Auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import {addMessageActionCreator} from \"../../../Redux/Reducer/dialogReducer\";\r\nimport DialogWindow from \"./DialogWindow\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet madDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, madDispatchToProps),\r\n    withAuthRedirect\r\n)(DialogWindow)"],"sourceRoot":""}